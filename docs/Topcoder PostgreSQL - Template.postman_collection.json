{
	"info": {
		"_postman_id": "f31ce104-2379-4b5a-8f7a-2bc296b01fe2",
		"name": "Topcoder PostgreSQL - Template",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Errors Copy",
			"item": [
				{
					"name": "Create an entity - missing data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/entities",
							"host": [
								"{{URL}}"
							],
							"path": [
								"entities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search entities - invalid params",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/entities?page=-1&perPage=20&name=test",
							"host": [
								"{{URL}}"
							],
							"path": [
								"entities"
							],
							"query": [
								{
									"key": "page",
									"value": "-1"
								},
								{
									"key": "perPage",
									"value": "20"
								},
								{
									"key": "name",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single by ID - not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/entities/{{$randomUUID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"entities",
								"{{$randomUUID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "fully update by ID - not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated\",\n    \"description\": \"this is the description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/entities/{{$randomUUID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"entities",
								"{{$randomUUID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "fully update by ID - invalid body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"this is the description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/entities/{{ENTITY_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"entities",
								"{{ENTITY_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Partially update by ID - not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"partially updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/entities/{{$randomUUID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"entities",
								"{{$randomUUID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Partially update by ID - invalid body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"invalid\": \"property\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/entities/{{ENTITY_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"entities",
								"{{ENTITY_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete by ID - not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/entities/{{$randomUUID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"entities",
								"{{$randomUUID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create an entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"ENTITY_ID\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"test\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/entities",
					"host": [
						"{{URL}}"
					],
					"path": [
						"entities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search entities",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/entities?page=1&perPage=20&name=test",
					"host": [
						"{{URL}}"
					],
					"path": [
						"entities"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "perPage",
							"value": "20"
						},
						{
							"key": "name",
							"value": "test"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/entities/{{ENTITY_ID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"entities",
						"{{ENTITY_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "fully update by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Updated\",\n    \"description\": \"this is the description\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/entities/{{ENTITY_ID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"entities",
						"{{ENTITY_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partially update by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"partially updated\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/entities/{{ENTITY_ID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"entities",
						"{{ENTITY_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}/entities/{{ENTITY_ID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"entities",
						"{{ENTITY_ID}}"
					]
				}
			},
			"response": []
		}
	]
}